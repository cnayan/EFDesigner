//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Data.Entity.Spatial;

namespace Testing
{
   public partial class SpatialProperties
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      protected SpatialProperties()
      {
         Init();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="attrgeography"></param>
      /// <param name="attrgeographycollection"></param>
      /// <param name="attrgeographylinestring"></param>
      /// <param name="attrgeographymultilinestring"></param>
      /// <param name="attrgeographymultipoint"></param>
      /// <param name="attrgeographymultipolygon"></param>
      /// <param name="attrgeographypoint"></param>
      /// <param name="attrgeographypolygon"></param>
      /// <param name="attrgeometry"></param>
      /// <param name="attrgeometrycollection"></param>
      /// <param name="attrgeometrylinestring"></param>
      /// <param name="attrgeometrymultilinestring"></param>
      /// <param name="attrgeometrymultipoint"></param>
      /// <param name="attrgeometrymultipolygon"></param>
      /// <param name="attrgeometrypoint"></param>
      public SpatialProperties(DbGeography attrgeography, DbGeography attrgeographycollection, DbGeography attrgeographylinestring, DbGeography attrgeographymultilinestring, DbGeography attrgeographymultipoint, DbGeography attrgeographymultipolygon, DbGeography attrgeographypoint, DbGeography attrgeographypolygon, DbGeometry attrgeometry, DbGeometry attrgeometrycollection, DbGeometry attrgeometrylinestring, DbGeometry attrgeometrymultilinestring, DbGeometry attrgeometrymultipoint, DbGeometry attrgeometrymultipolygon, DbGeometry attrgeometrypoint)
      {
         if (attrgeography == null) throw new ArgumentNullException(nameof(attrgeography));
         this.AttrGeography = attrgeography;

         if (attrgeographycollection == null) throw new ArgumentNullException(nameof(attrgeographycollection));
         this.AttrGeographyCollection = attrgeographycollection;

         if (attrgeographylinestring == null) throw new ArgumentNullException(nameof(attrgeographylinestring));
         this.AttrGeographyLineString = attrgeographylinestring;

         if (attrgeographymultilinestring == null) throw new ArgumentNullException(nameof(attrgeographymultilinestring));
         this.AttrGeographyMultiLineString = attrgeographymultilinestring;

         if (attrgeographymultipoint == null) throw new ArgumentNullException(nameof(attrgeographymultipoint));
         this.AttrGeographyMultiPoint = attrgeographymultipoint;

         if (attrgeographymultipolygon == null) throw new ArgumentNullException(nameof(attrgeographymultipolygon));
         this.AttrGeographyMultiPolygon = attrgeographymultipolygon;

         if (attrgeographypoint == null) throw new ArgumentNullException(nameof(attrgeographypoint));
         this.AttrGeographyPoint = attrgeographypoint;

         if (attrgeographypolygon == null) throw new ArgumentNullException(nameof(attrgeographypolygon));
         this.AttrGeographyPolygon = attrgeographypolygon;

         if (attrgeometry == null) throw new ArgumentNullException(nameof(attrgeometry));
         this.AttrGeometry = attrgeometry;

         if (attrgeometrycollection == null) throw new ArgumentNullException(nameof(attrgeometrycollection));
         this.AttrGeometryCollection = attrgeometrycollection;

         if (attrgeometrylinestring == null) throw new ArgumentNullException(nameof(attrgeometrylinestring));
         this.AttrGeometryLineString = attrgeometrylinestring;

         if (attrgeometrymultilinestring == null) throw new ArgumentNullException(nameof(attrgeometrymultilinestring));
         this.AttrGeometryMultiLineString = attrgeometrymultilinestring;

         if (attrgeometrymultipoint == null) throw new ArgumentNullException(nameof(attrgeometrymultipoint));
         this.AttrGeometryMultiPoint = attrgeometrymultipoint;

         if (attrgeometrymultipolygon == null) throw new ArgumentNullException(nameof(attrgeometrymultipolygon));
         this.AttrGeometryMultiPolygon = attrgeometrymultipolygon;

         if (attrgeometrypoint == null) throw new ArgumentNullException(nameof(attrgeometrypoint));
         this.AttrGeometryPoint = attrgeometrypoint;


         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="attrgeography"></param>
      /// <param name="attrgeographycollection"></param>
      /// <param name="attrgeographylinestring"></param>
      /// <param name="attrgeographymultilinestring"></param>
      /// <param name="attrgeographymultipoint"></param>
      /// <param name="attrgeographymultipolygon"></param>
      /// <param name="attrgeographypoint"></param>
      /// <param name="attrgeographypolygon"></param>
      /// <param name="attrgeometry"></param>
      /// <param name="attrgeometrycollection"></param>
      /// <param name="attrgeometrylinestring"></param>
      /// <param name="attrgeometrymultilinestring"></param>
      /// <param name="attrgeometrymultipoint"></param>
      /// <param name="attrgeometrymultipolygon"></param>
      /// <param name="attrgeometrypoint"></param>
      public static SpatialProperties Create(DbGeography attrgeography, DbGeography attrgeographycollection, DbGeography attrgeographylinestring, DbGeography attrgeographymultilinestring, DbGeography attrgeographymultipoint, DbGeography attrgeographymultipolygon, DbGeography attrgeographypoint, DbGeography attrgeographypolygon, DbGeometry attrgeometry, DbGeometry attrgeometrycollection, DbGeometry attrgeometrylinestring, DbGeometry attrgeometrymultilinestring, DbGeometry attrgeometrymultipoint, DbGeometry attrgeometrymultipolygon, DbGeometry attrgeometrypoint)
      {
         return new SpatialProperties(attrgeography, attrgeographycollection, attrgeographylinestring, attrgeographymultilinestring, attrgeographymultipoint, attrgeographymultipolygon, attrgeographypoint, attrgeographypolygon, attrgeometry, attrgeometrycollection, attrgeometrylinestring, attrgeometrymultilinestring, attrgeometrymultipoint, attrgeometrymultipolygon, attrgeometrypoint);
      }

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Backing field for Id
      /// </summary>
      protected int _Id;
      /// <summary>
      /// When provided in a partial class, allows value of Id to be changed before setting.
      /// </summary>
      partial void SetId(int oldValue, ref int newValue);
      /// <summary>
      /// When provided in a partial class, allows value of Id to be changed before returning.
      /// </summary>
      partial void GetId(ref int result);

      /// <summary>
      /// Identity, Required
      /// </summary>
      [Key]
      [Required]
      public int Id
      {
         get
         {
            int value = _Id;
            GetId(ref value);
            return (_Id = value);
         }
         protected set
         {
            int oldValue = _Id;
            SetId(oldValue, ref value);
            if (oldValue != value)
            {
               _Id = value;
            }
         }
      }

      /// <summary>
      /// Backing field for AttrGeography
      /// </summary>
      protected DbGeography _AttrGeography;
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeography to be changed before setting.
      /// </summary>
      partial void SetAttrGeography(DbGeography oldValue, ref DbGeography newValue);
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeography to be changed before returning.
      /// </summary>
      partial void GetAttrGeography(ref DbGeography result);

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public DbGeography AttrGeography
      {
         get
         {
            DbGeography value = _AttrGeography;
            GetAttrGeography(ref value);
            return (_AttrGeography = value);
         }
         set
         {
            DbGeography oldValue = _AttrGeography;
            SetAttrGeography(oldValue, ref value);
            if (oldValue != value)
            {
               _AttrGeography = value;
            }
         }
      }

      /// <summary>
      /// Backing field for AttrGeographyCollection
      /// </summary>
      protected DbGeography _AttrGeographyCollection;
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeographyCollection to be changed before setting.
      /// </summary>
      partial void SetAttrGeographyCollection(DbGeography oldValue, ref DbGeography newValue);
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeographyCollection to be changed before returning.
      /// </summary>
      partial void GetAttrGeographyCollection(ref DbGeography result);

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public DbGeography AttrGeographyCollection
      {
         get
         {
            DbGeography value = _AttrGeographyCollection;
            GetAttrGeographyCollection(ref value);
            return (_AttrGeographyCollection = value);
         }
         set
         {
            DbGeography oldValue = _AttrGeographyCollection;
            SetAttrGeographyCollection(oldValue, ref value);
            if (oldValue != value)
            {
               _AttrGeographyCollection = value;
            }
         }
      }

      /// <summary>
      /// Backing field for AttrGeographyLineString
      /// </summary>
      protected DbGeography _AttrGeographyLineString;
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeographyLineString to be changed before setting.
      /// </summary>
      partial void SetAttrGeographyLineString(DbGeography oldValue, ref DbGeography newValue);
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeographyLineString to be changed before returning.
      /// </summary>
      partial void GetAttrGeographyLineString(ref DbGeography result);

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public DbGeography AttrGeographyLineString
      {
         get
         {
            DbGeography value = _AttrGeographyLineString;
            GetAttrGeographyLineString(ref value);
            return (_AttrGeographyLineString = value);
         }
         set
         {
            DbGeography oldValue = _AttrGeographyLineString;
            SetAttrGeographyLineString(oldValue, ref value);
            if (oldValue != value)
            {
               _AttrGeographyLineString = value;
            }
         }
      }

      /// <summary>
      /// Backing field for AttrGeographyMultiLineString
      /// </summary>
      protected DbGeography _AttrGeographyMultiLineString;
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeographyMultiLineString to be changed before setting.
      /// </summary>
      partial void SetAttrGeographyMultiLineString(DbGeography oldValue, ref DbGeography newValue);
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeographyMultiLineString to be changed before returning.
      /// </summary>
      partial void GetAttrGeographyMultiLineString(ref DbGeography result);

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public DbGeography AttrGeographyMultiLineString
      {
         get
         {
            DbGeography value = _AttrGeographyMultiLineString;
            GetAttrGeographyMultiLineString(ref value);
            return (_AttrGeographyMultiLineString = value);
         }
         set
         {
            DbGeography oldValue = _AttrGeographyMultiLineString;
            SetAttrGeographyMultiLineString(oldValue, ref value);
            if (oldValue != value)
            {
               _AttrGeographyMultiLineString = value;
            }
         }
      }

      /// <summary>
      /// Backing field for AttrGeographyMultiPoint
      /// </summary>
      protected DbGeography _AttrGeographyMultiPoint;
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeographyMultiPoint to be changed before setting.
      /// </summary>
      partial void SetAttrGeographyMultiPoint(DbGeography oldValue, ref DbGeography newValue);
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeographyMultiPoint to be changed before returning.
      /// </summary>
      partial void GetAttrGeographyMultiPoint(ref DbGeography result);

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public DbGeography AttrGeographyMultiPoint
      {
         get
         {
            DbGeography value = _AttrGeographyMultiPoint;
            GetAttrGeographyMultiPoint(ref value);
            return (_AttrGeographyMultiPoint = value);
         }
         set
         {
            DbGeography oldValue = _AttrGeographyMultiPoint;
            SetAttrGeographyMultiPoint(oldValue, ref value);
            if (oldValue != value)
            {
               _AttrGeographyMultiPoint = value;
            }
         }
      }

      /// <summary>
      /// Backing field for AttrGeographyMultiPolygon
      /// </summary>
      protected DbGeography _AttrGeographyMultiPolygon;
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeographyMultiPolygon to be changed before setting.
      /// </summary>
      partial void SetAttrGeographyMultiPolygon(DbGeography oldValue, ref DbGeography newValue);
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeographyMultiPolygon to be changed before returning.
      /// </summary>
      partial void GetAttrGeographyMultiPolygon(ref DbGeography result);

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public DbGeography AttrGeographyMultiPolygon
      {
         get
         {
            DbGeography value = _AttrGeographyMultiPolygon;
            GetAttrGeographyMultiPolygon(ref value);
            return (_AttrGeographyMultiPolygon = value);
         }
         set
         {
            DbGeography oldValue = _AttrGeographyMultiPolygon;
            SetAttrGeographyMultiPolygon(oldValue, ref value);
            if (oldValue != value)
            {
               _AttrGeographyMultiPolygon = value;
            }
         }
      }

      /// <summary>
      /// Backing field for AttrGeographyPoint
      /// </summary>
      protected DbGeography _AttrGeographyPoint;
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeographyPoint to be changed before setting.
      /// </summary>
      partial void SetAttrGeographyPoint(DbGeography oldValue, ref DbGeography newValue);
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeographyPoint to be changed before returning.
      /// </summary>
      partial void GetAttrGeographyPoint(ref DbGeography result);

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public DbGeography AttrGeographyPoint
      {
         get
         {
            DbGeography value = _AttrGeographyPoint;
            GetAttrGeographyPoint(ref value);
            return (_AttrGeographyPoint = value);
         }
         set
         {
            DbGeography oldValue = _AttrGeographyPoint;
            SetAttrGeographyPoint(oldValue, ref value);
            if (oldValue != value)
            {
               _AttrGeographyPoint = value;
            }
         }
      }

      /// <summary>
      /// Backing field for AttrGeographyPolygon
      /// </summary>
      protected DbGeography _AttrGeographyPolygon;
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeographyPolygon to be changed before setting.
      /// </summary>
      partial void SetAttrGeographyPolygon(DbGeography oldValue, ref DbGeography newValue);
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeographyPolygon to be changed before returning.
      /// </summary>
      partial void GetAttrGeographyPolygon(ref DbGeography result);

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public DbGeography AttrGeographyPolygon
      {
         get
         {
            DbGeography value = _AttrGeographyPolygon;
            GetAttrGeographyPolygon(ref value);
            return (_AttrGeographyPolygon = value);
         }
         set
         {
            DbGeography oldValue = _AttrGeographyPolygon;
            SetAttrGeographyPolygon(oldValue, ref value);
            if (oldValue != value)
            {
               _AttrGeographyPolygon = value;
            }
         }
      }

      /// <summary>
      /// Backing field for AttrGeometry
      /// </summary>
      protected DbGeometry _AttrGeometry;
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeometry to be changed before setting.
      /// </summary>
      partial void SetAttrGeometry(DbGeometry oldValue, ref DbGeometry newValue);
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeometry to be changed before returning.
      /// </summary>
      partial void GetAttrGeometry(ref DbGeometry result);

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public DbGeometry AttrGeometry
      {
         get
         {
            DbGeometry value = _AttrGeometry;
            GetAttrGeometry(ref value);
            return (_AttrGeometry = value);
         }
         set
         {
            DbGeometry oldValue = _AttrGeometry;
            SetAttrGeometry(oldValue, ref value);
            if (oldValue != value)
            {
               _AttrGeometry = value;
            }
         }
      }

      /// <summary>
      /// Backing field for AttrGeometryCollection
      /// </summary>
      protected DbGeometry _AttrGeometryCollection;
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeometryCollection to be changed before setting.
      /// </summary>
      partial void SetAttrGeometryCollection(DbGeometry oldValue, ref DbGeometry newValue);
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeometryCollection to be changed before returning.
      /// </summary>
      partial void GetAttrGeometryCollection(ref DbGeometry result);

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public DbGeometry AttrGeometryCollection
      {
         get
         {
            DbGeometry value = _AttrGeometryCollection;
            GetAttrGeometryCollection(ref value);
            return (_AttrGeometryCollection = value);
         }
         set
         {
            DbGeometry oldValue = _AttrGeometryCollection;
            SetAttrGeometryCollection(oldValue, ref value);
            if (oldValue != value)
            {
               _AttrGeometryCollection = value;
            }
         }
      }

      /// <summary>
      /// Backing field for AttrGeometryLineString
      /// </summary>
      protected DbGeometry _AttrGeometryLineString;
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeometryLineString to be changed before setting.
      /// </summary>
      partial void SetAttrGeometryLineString(DbGeometry oldValue, ref DbGeometry newValue);
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeometryLineString to be changed before returning.
      /// </summary>
      partial void GetAttrGeometryLineString(ref DbGeometry result);

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public DbGeometry AttrGeometryLineString
      {
         get
         {
            DbGeometry value = _AttrGeometryLineString;
            GetAttrGeometryLineString(ref value);
            return (_AttrGeometryLineString = value);
         }
         set
         {
            DbGeometry oldValue = _AttrGeometryLineString;
            SetAttrGeometryLineString(oldValue, ref value);
            if (oldValue != value)
            {
               _AttrGeometryLineString = value;
            }
         }
      }

      /// <summary>
      /// Backing field for AttrGeometryMultiLineString
      /// </summary>
      protected DbGeometry _AttrGeometryMultiLineString;
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeometryMultiLineString to be changed before setting.
      /// </summary>
      partial void SetAttrGeometryMultiLineString(DbGeometry oldValue, ref DbGeometry newValue);
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeometryMultiLineString to be changed before returning.
      /// </summary>
      partial void GetAttrGeometryMultiLineString(ref DbGeometry result);

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public DbGeometry AttrGeometryMultiLineString
      {
         get
         {
            DbGeometry value = _AttrGeometryMultiLineString;
            GetAttrGeometryMultiLineString(ref value);
            return (_AttrGeometryMultiLineString = value);
         }
         set
         {
            DbGeometry oldValue = _AttrGeometryMultiLineString;
            SetAttrGeometryMultiLineString(oldValue, ref value);
            if (oldValue != value)
            {
               _AttrGeometryMultiLineString = value;
            }
         }
      }

      /// <summary>
      /// Backing field for AttrGeometryMultiPoint
      /// </summary>
      protected DbGeometry _AttrGeometryMultiPoint;
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeometryMultiPoint to be changed before setting.
      /// </summary>
      partial void SetAttrGeometryMultiPoint(DbGeometry oldValue, ref DbGeometry newValue);
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeometryMultiPoint to be changed before returning.
      /// </summary>
      partial void GetAttrGeometryMultiPoint(ref DbGeometry result);

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public DbGeometry AttrGeometryMultiPoint
      {
         get
         {
            DbGeometry value = _AttrGeometryMultiPoint;
            GetAttrGeometryMultiPoint(ref value);
            return (_AttrGeometryMultiPoint = value);
         }
         set
         {
            DbGeometry oldValue = _AttrGeometryMultiPoint;
            SetAttrGeometryMultiPoint(oldValue, ref value);
            if (oldValue != value)
            {
               _AttrGeometryMultiPoint = value;
            }
         }
      }

      /// <summary>
      /// Backing field for AttrGeometryMultiPolygon
      /// </summary>
      protected DbGeometry _AttrGeometryMultiPolygon;
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeometryMultiPolygon to be changed before setting.
      /// </summary>
      partial void SetAttrGeometryMultiPolygon(DbGeometry oldValue, ref DbGeometry newValue);
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeometryMultiPolygon to be changed before returning.
      /// </summary>
      partial void GetAttrGeometryMultiPolygon(ref DbGeometry result);

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public DbGeometry AttrGeometryMultiPolygon
      {
         get
         {
            DbGeometry value = _AttrGeometryMultiPolygon;
            GetAttrGeometryMultiPolygon(ref value);
            return (_AttrGeometryMultiPolygon = value);
         }
         set
         {
            DbGeometry oldValue = _AttrGeometryMultiPolygon;
            SetAttrGeometryMultiPolygon(oldValue, ref value);
            if (oldValue != value)
            {
               _AttrGeometryMultiPolygon = value;
            }
         }
      }

      /// <summary>
      /// Backing field for AttrGeometryPoint
      /// </summary>
      protected DbGeometry _AttrGeometryPoint;
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeometryPoint to be changed before setting.
      /// </summary>
      partial void SetAttrGeometryPoint(DbGeometry oldValue, ref DbGeometry newValue);
      /// <summary>
      /// When provided in a partial class, allows value of AttrGeometryPoint to be changed before returning.
      /// </summary>
      partial void GetAttrGeometryPoint(ref DbGeometry result);

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public DbGeometry AttrGeometryPoint
      {
         get
         {
            DbGeometry value = _AttrGeometryPoint;
            GetAttrGeometryPoint(ref value);
            return (_AttrGeometryPoint = value);
         }
         set
         {
            DbGeometry oldValue = _AttrGeometryPoint;
            SetAttrGeometryPoint(oldValue, ref value);
            if (oldValue != value)
            {
               _AttrGeometryPoint = value;
            }
         }
      }

   }
}

